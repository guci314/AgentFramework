{
  "id": "ruleset_713553",
  "goal": "tester, please create unit tests for `calculator.py` in `test_calculator.py` and run them to ensure everything works correctly.",
  "rules": [
    {
      "id": "rule_001",
      "name": "Prepare calculator.py for testing",
      "condition": "The file `calculator.py` does not exist or does not contain basic arithmetic functions (add, subtract, multiply, divide).",
      "action": "Create `calculator.py` with placeholder or basic implementations of `add`, `subtract`, `multiply`, `divide` functions to ensure it's testable.",
      "agent_name": "coder",
      "priority": 90,
      "phase": "execution",
      "expected_outcome": "`calculator.py` is present and contains basic arithmetic functions ready for testing.",
      "metadata": {}
    },
    {
      "id": "rule_002",
      "name": "Develop unit tests for calculator.py",
      "condition": "`test_calculator.py` does not exist or does not contain comprehensive unit tests for `calculator.py`'s functions.",
      "action": "Create `test_calculator.py` and write unit tests for `add`, `subtract`, `multiply`, `divide` functions in `calculator.py` using a suitable testing framework (e.g., `unittest`).",
      "agent_name": "tester",
      "priority": 85,
      "phase": "execution",
      "expected_outcome": "`test_calculator.py` is created and populated with valid unit tests.",
      "metadata": {}
    },
    {
      "id": "rule_003",
      "name": "Execute unit tests for calculator.py",
      "condition": "Unit tests in `test_calculator.py` have been created or updated, and have not been run successfully.",
      "action": "Execute the `test_calculator.py` file to run all defined unit tests.",
      "agent_name": "tester",
      "priority": 80,
      "phase": "execution",
      "expected_outcome": "Test execution completes, and raw test results (pass/fail) are generated.",
      "metadata": {}
    },
    {
      "id": "rule_004",
      "name": "Analyze test results and ensure correctness",
      "condition": "Unit tests have been run, and their results need to be verified to ensure everything works correctly.",
      "action": "Analyze the test output to confirm that all unit tests passed. If any failures are detected, report them. Otherwise, confirm successful completion.",
      "agent_name": "tester",
      "priority": 95,
      "phase": "execution",
      "expected_outcome": "Confirmation that all tests passed, indicating `calculator.py` works correctly, or a clear report of failures.",
      "metadata": {}
    }
  ],
  "version": 1,
  "status": "active",
  "modification_history": []
}