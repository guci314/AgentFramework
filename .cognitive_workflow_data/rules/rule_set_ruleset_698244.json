{
  "id": "ruleset_698244",
  "goal": "\n    开发一个简单的计算器程序，要求：\n    1. 实现加减乘除四个基本运算\n    2. 编写完整的单元测试\n    3. 运行测试，确保测试通过\n    4. 生成使用说明文档，使用markdown格式，文件保存在calculator.md\n    5. 文件保存在calculator.py\n    ",
  "rules": [
    {
      "id": "rule_475157",
      "name": "需求分析与文件结构确认",
      "condition": "任务开始，需要明确所有开发和交付要求",
      "action": "分析目标中关于计算器功能（加减乘除）、文件命名（calculator.py, calculator.md）、单元测试要求和文档格式的所有细节，确保理解无误。",
      "agent_name": "coder",
      "priority": 90,
      "phase": "information_gathering",
      "expected_outcome": "对计算器功能、文件结构（calculator.py, calculator.md）和测试要求有清晰的理解。",
      "metadata": {}
    },
    {
      "id": "rule_840484",
      "name": "实现计算器核心功能",
      "condition": "已完成需求分析，准备开始编写代码",
      "action": "在`calculator.py`文件中实现加、减、乘、除四个基本运算函数。确保代码结构清晰，易于测试，并处理除数为零的异常情况。",
      "agent_name": "coder",
      "priority": 80,
      "phase": "execution",
      "expected_outcome": "生成`calculator.py`文件，包含所有基本运算的函数实现，并考虑了异常处理。",
      "metadata": {}
    },
    {
      "id": "rule_261243",
      "name": "生成使用说明文档",
      "condition": "计算器核心功能已初步实现，需要提供用户使用指南",
      "action": "根据`calculator.py`的功能，生成一份详细的Markdown格式使用说明文档，保存为`calculator.md`。文档应包含如何导入和使用这些函数，以及示例代码。",
      "agent_name": "coder",
      "priority": 75,
      "phase": "execution",
      "expected_outcome": "生成`calculator.md`文件，包含计算器程序的使用说明和示例。",
      "metadata": {}
    },
    {
      "id": "rule_001179",
      "name": "编写单元测试",
      "condition": "计算器核心功能已实现，需要验证其正确性",
      "action": "为`calculator.py`中的加、减、乘、除函数编写全面的单元测试用例。测试应覆盖正常情况、边界情况（如零、负数）和错误处理（如除数为零）。",
      "agent_name": "tester",
      "priority": 60,
      "phase": "verification",
      "expected_outcome": "生成包含所有必要测试用例的测试脚本，准备执行。",
      "metadata": {}
    },
    {
      "id": "rule_332161",
      "name": "运行测试并验证结果",
      "condition": "单元测试用例已编写完成，需要执行并确认功能正确",
      "action": "运行所有编写的单元测试。如果所有测试通过，则确认`calculator.py`功能正确；如果存在失败，则报告失败的测试用例和错误信息，并建议`coder`进行调试。",
      "agent_name": "tester",
      "priority": 50,
      "phase": "verification",
      "expected_outcome": "所有单元测试通过，确认`calculator.py`功能正确无误，或提供详细的测试失败报告。",
      "metadata": {}
    }
  ],
  "version": 1,
  "status": "active",
  "modification_history": []
}